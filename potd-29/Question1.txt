link: https://www.geeksforgeeks.org/problems/number-of-occurrence2259/1

code:
class Solution{
    private:
    int first_occurence(int arr[],int n, int x)
    {
        int beg=0,end=n-1;
        int ans=-1,mid;
        while(beg<=end)
        {
            mid = beg + (end-beg)/2;
            if(arr[mid]==x)
            {
                ans=mid;
                end=mid-1;
            }
            else if(arr[mid]>x)
            {
                end=mid-1;
            }
            else if(arr[mid]<x)
            {
                beg=mid+1;
            }
        }
        return ans;
    }
    
    int last_occurence(int arr[],int n, int x)
    {
         int beg=0,end=n-1;
        int ans=-1,mid;
        while(beg<=end)
        {
            mid = beg + (end-beg)/2;
            if(arr[mid]==x)
            {
                ans=mid;
                beg=mid+1;
            }
            else if(arr[mid]>x)
            {
                end=mid-1;
            }
            else if(arr[mid]<x)
            {
                beg=mid+1;
            }
        }
        return ans;
    }
public:	
	/* if x is present in arr[] then returns the count
		of occurrences of x, otherwise returns 0. */
	int count(int arr[], int n, int x) {
	    
	    int f=first_occurence(arr,n,x);
	    int l=last_occurence(arr,n,x);
	    if(l==-1 || f==-1)
	    {
	        return 0;
	    }
	    int a=l-f+1;
	    return a;
	    // code here
	}
};
